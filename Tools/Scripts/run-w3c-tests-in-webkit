#!/usr/bin/env python

import glob, os, sys, shutil, re
import xml.etree.ElementTree as ET

webkitPath = ''
w3cTestPath = ''
w3cTestDir = ''
platform = ''

def usage():
    print"USAGE: run-w3c-tests-in-webkit [webkit_dir] [w3c_test_dir]"
    sys.exit()

def parseArgs():
	### TODO convert args to the webkit style python script args
	### TODO add option to removed the tmp dir after the harness is run
	if (len(sys.argv) < 2):
	    usage()
	else:
		global webkitPath
		global w3cTestPath
		webkitPath = sys.argv[1]
		webkitPath += "/"
		webkitPath.replace("//","/")
		w3cTestPath = sys.argv[2]

def findRefFile(testFile):    
	f = open(testFile)
	doc = ET.parse(f).getroot()
	f.close()
    
	for elem in doc.findall('head/link'):
		if elem.get('rel') == 'match':
			return elem.get('href')
			print elem.get('rel')
	
	print "WARNING: No reference file specified in " + testFile
	return ""
	
def convertToWebkitTest(w3cTest):
	### Convert the .xht file to .html
    testBasename = os.path.basename(w3cTest) 
    
    w3cTestConverted = testBasename.replace("xht", "html")
    webkitTest = webkitTempDir + w3cTestConverted
    
    ### Copy the .html file to the WebKit/LayoutTests temp dir     
    shutil.copy2(w3cTest, webkitTest)
    
    ### Strip the enumeration and extension from the basename
    testRootname = re.split('\d+.xht', testBasename)[0]    
    
    ### Find the reference file for this test
    refFile =  findRefFile(w3cTest)
    if refFile != "":
		w3cRef = w3cTestDir + refFile
       	### Copy it to the WebKit/LayoutTests temp dir with the '-expected.html' convention
		w3cRefConverted = re.split('.html', w3cTestConverted)[0] + '-expected.html'
		webkitRef = webkitTempDir + w3cRefConverted
		shutil.copy(w3cRef, webkitRef)



if os.name == 'posix' and os.uname()[0] == 'Darwin':
    platform = 'mac'
else:
    platform = os.name

parseArgs()

### Create a temp dir in Webkit/LayoutTests
webkitTempDir = webkitPath + 'LayoutTests/w3ctmp/'
shutil.rmtree(webkitTempDir, ignore_errors=True)
os.makedirs(webkitTempDir)

### Clear out any expected.png/text files there might be in the platform folder
shutil.rmtree(webkitPath +'LayoutTests/platform/'+ platform +'/w3ctmp', ignore_errors=True )

if os.path.isdir(w3cTestPath):
	w3cTestPath += "/"
	w3cTestPath = w3cTestPath.replace("//", "/")
	w3cTestDir = w3cTestPath
	
	### Scan the test directory
	for w3cTest in os.listdir(w3cTestPath):
		fullpath = os.path.join(w3cTestPath, w3cTest)
		if os.path.isfile(fullpath) and not(w3cTest.startswith(".")):
			print "converting " + w3cTest
			convertToWebkitTest(fullpath)
else:
	w3cTestDir = os.path.abspath(os.path.join(w3cTestPath, os.path.pardir)) +'/'
	convertToWebkitTest(w3cTestPath)

### Run the tests
webkitHarness = webkitPath + 'Tools/Scripts/new-run-webkit-tests'
webkitHarnessCmd = webkitHarness +" "+ webkitTempDir
print "Calling new-run-webkit-tests " + webkitTempDir
os.system(webkitHarnessCmd)
    